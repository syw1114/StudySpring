<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.AccountRepository">
    <resultMap id="role" type="com.example.demo.domain.Role">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="create_date" column="create_date" />
        <result property="update_date" column="update_date" />
    </resultMap>

    <resultMap id="user" type="com.example.demo.domain.User">
        <result property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="provider" column="provider" />
        <result property="role_id" column="role_id" />
        <result property="create_date" column="create_date" />
        <result property="update_date" column="update_date" />
    </resultMap>

    <update id="saveUserAddress" parameterType="com.example.demo.domain.UserAddress">
        update
            user_dtl
        set
            address1 = #{address1},
            address2 = #{address2},
            address3 = #{address3},
            update_date = now()
        where
            id = #{id}

    </update>


    <select id="findUserByEmail" parameterType="String" resultMap="user">
        select
            um.id,
            um.name,
            um.username,
            um.password,
            um.phone,
            um.provider,
            um.role_id,
            rm.name as role_name,
            um.create_date,
            um.update_date
        from
            user_mst um
            left outer join role_mst rm on(rm.id = um.role_id)
        where
            um.username = #{username}
    </select>
    <select id="getUserAddress" resultType="com.example.demo.domain.UserAddress">
        SELECT
            ud.address1,
            ud.address2,
            ud.address3
        FROM
            user_dtl ud
        WHERE
            id = #{id}
    </select>
    <select id="getPaymentProduct" resultType="com.example.demo.domain.PaymentProduct">

        SELECT
            pd.id AS pdt_dtl_id,
            pd.pdt_id,
            pm.pdt_name,
            pm.pdt_price,
            pd.size_id,
            psm.size_name,
            pim.save_name
        FROM
        pdt_dtl pd
            LEFT OUTER JOIN pdt_mst pm ON(pm.id = pd.pdt_id)
            LEFT OUTER JOIN pdt_size_dtl psd ON(psd.id = pd.size_id)
            LEFT OUTER JOIN pdt_size_mst psm ON(psm.id = psd.size_id)
            LEFT OUTER JOIN pdt_image_mst pim ON(pim.pdt_id = pd.pdt_id)
        WHERE
            pd.id = #{pdtDtlId}
        LIMIT 1

    </select>

    <insert id = "saveUser" parameterType="com.example.demo.domain.User">
        insert into
            user_mst
        values(
            0,
            #{username},
            #{password},
            #{name},
            #{phone},
            #{provider},
            #{role_id},
            now(),
            now()
        )
    </insert>
</mapper>